{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","year","title","summary","poster","genres","className","src","alt","map","genre","index","slice","App","state","isLoading","movies","getMovies","a","axios","get","data","console","log","setState","this","movie","id","medium_cover_image","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+RA8BeA,MA3Bf,YAA0D,IAAzCC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OAC7C,OACE,sBAAKC,UAAU,QAAf,UACE,qBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACrC,sBAAKI,UAAU,cAAf,UACE,oBAAIA,UAAU,eAAd,SAA8BJ,IAC9B,oBAAII,UAAU,cAAd,SAA6BL,IAC7B,oBAAIK,UAAU,gBAAd,SACGD,EAAOI,KAAI,SAACC,EAAOC,GAAR,OACV,oBAAgBL,UAAU,gBAA1B,SACGI,GADMC,QAKb,oBAAGL,UAAU,iBAAb,UAA+BH,EAAQS,MAAM,EAAE,KAA/C,gBCwCOC,G,kNA/CbC,MAAO,CACLC,WAAY,EACZC,OAAQ,I,EAGVC,U,sBAAY,8BAAAC,EAAA,sEAG0BC,IAAMC,IAAI,4DAHpC,gBAGSJ,EAHT,EAGHK,KAAMA,KAAML,OACnBM,QAAQC,IAAIP,GAEZ,EAAKQ,SAAS,CAACR,SAAOD,WAAU,IANtB,2C,uDAQZ,WACEU,KAAKR,c,oBAKP,WACE,MAA8BQ,KAAKX,MAA3BC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,OACnB,OACE,yBAASV,UAAU,YAAnB,SACGS,EACC,qBAAKT,UAAU,SAAf,SACE,sBAAMA,UAAU,eAAhB,0BAGF,qBAAKA,UAAU,SAAf,SACGU,EAAOP,KAAI,SAAAiB,GAAK,OACf,cAAC,EAAD,CAEEC,GAAID,EAAMC,GACV1B,KAAMyB,EAAMzB,KACZC,MAAOwB,EAAMxB,MACbC,QAASuB,EAAMvB,QACfC,OAAQsB,EAAME,mBACdvB,OAAQqB,EAAMrB,QANTqB,EAAMC,e,GAjCTE,IAAMC,YCCxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.31e34cd9.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Movie.css\";\r\nfunction Movie({ year, title, summary, poster, genres }) {\r\n  return (\r\n    <div className=\"movie\">\r\n      <img src={poster} alt={title} title={title} />\r\n      <div className=\"movie__data\">\r\n        <h3 className=\"movie__title\">{title}</h3>\r\n        <h5 className=\"movie__year\">{year}</h5>        \r\n        <ul className=\"movie__genres\">\r\n          {genres.map((genre, index) => (\r\n            <li key={index} className=\"genres__genre\">\r\n              {genre}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <p className=\"movie__summary\">{summary.slice(0,140)}...</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nMovie.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  year: PropTypes.number.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  summary: PropTypes.string.isRequired,\r\n  poster: PropTypes.string.isRequired,\r\n  genres: PropTypes.arrayOf(PropTypes.string).isRequired\r\n};\r\nexport default Movie;","import React from 'react';\nimport PropTypes from \"prop-types\"\nimport axios from \"axios\"\nimport Movie from \"./Movie\"\nimport \"./App.css\";\n // Component 는 html을 반환하는 함수\n\n//class Component\nclass App extends React.Component{\n  // state 는 object고 이값은 변한다. \n  state ={\n    isLoading : true,\n    movies :[]\n  }\n  // await 는 async가 있어야만 사용이가능하다(비동기)\n  getMovies = async() =>{\n    //const moives = await axios.get(\"https://yts-proxy.now.sh/list_movies.json\");\n    //console.log(moives.data.data.movies);\n    const {data:{data:{movies}}} =await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");\n    console.log(movies);\n    // this.setState({movies:movies})  -> this.setState({movies})\n    this.setState({movies,isLoading:false});\n  }\n  componentDidMount(){\n    this.getMovies();\n    \n  }\n \n  //react는 자동적으로 class component의 render method를 실행한다. 자동으로\n  render(){\n    const { isLoading, movies } = this.state;\n    return (\n      <section className=\"container\">\n        {isLoading ? (\n          <div className=\"loader\">\n            <span className=\"loader__text\">Loading...</span>\n          </div>\n        ) : (\n          <div className=\"movies\">\n            {movies.map(movie => (\n              <Movie\n                key={movie.id}\n                id={movie.id}\n                year={movie.year}\n                title={movie.title}\n                summary={movie.summary}\n                poster={movie.medium_cover_image}\n                genres={movie.genres}\n              />\n            ))}\n          </div>\n        )}\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\n//JSX는 JAVASCRIPT 안의 HTML이다. COMPONENT를 만들고 어떻게 사용해야하는지 대햔 것\n//강의에서는 1개의 컴포넌트만 랜더링 할수있었으나, 실제는 2개를 사용해도 문제가없다.\n//React.StrictMode - 컴포넌트 내의 잠재적인 문제를 알아내기위한도구 \n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}